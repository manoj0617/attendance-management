<%- layout("../layouts/adminBoilerplate") -%>
<body>
  <div class="container mt-5">
    <h1>View and Edit Timetable</h1>

    <!-- Table for viewing and editing timetable -->
    <div id="timetableContainer">
      <h2>Class Timetable</h2>
      <table class="table table-bordered mt-5">
        <thead>
          <tr>
            <th>Day</th>
            <% for (let i = 1; i <= timetable.numPeriods; i++) { %>
              <th>
                Period <%= i %><br>
                <input type="time" id="startTime_<%= i %>" value="<%= timetable.periods.find(p => p.hour === i) ? timetable.periods.find(p => p.hour === i).startTime : '' %>">
                <input type="time" id="endTime_<%= i %>" value="<%= timetable.periods.find(p => p.hour === i) ? timetable.periods.find(p => p.hour === i).endTime : '' %>">
              </th>
            <% } %>
          </tr>
        </thead>
        <tbody>
          <% const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']; %>
          <% for (let i = 0; i < 7; i++) { %>
            <tr>
              <td><%= days[i % 7] %></td>
              <% for (let j = 0; j < timetable.numPeriods; j++) { %>
                <% const period = timetable.periods.find(p => p.day === days[i % 7] && p.hour === j + 1); %>
                <td id="cell_<%= i %>_<%= j %>">
                  <% if (period) { %>
                    <div>
                      <%= period.subject.name %><br>
                      <%= period.faculty.name %><br>
                      <%= period.startTime %> - <%= period.endTime %><br>
                      <button onclick="editPeriodForm('<%= period._id %>', <%= i %>, <%= j %>, '<%= period.subject._id %>', '<%= period.faculty._id %>', '<%= period.startTime %>', '<%= period.endTime %>')" class="btn btn-sm btn-warning">Edit</button>
                      <button onclick="deletePeriod('<%= period._id %>')" class="btn btn-sm btn-danger">Delete</button>
                    </div>
                  <% } else { %>
                    <button onclick="createPeriodForm(<%= i %>, <%= j %>)" class="btn btn-primary btn-sm">+</button>
                  <% } %>
                </td>
              <% } %>
            </tr>
          <% } %>
        </tbody>
      </table>
    </div>

    <!-- Modal for creating/editing period -->
    <div class="modal fade" id="periodModal" tabindex="-1" aria-labelledby="periodModalLabel" aria-hidden="true">
      <div class="modal-dialog">
        <div class="modal-content">
          <div class="modal-header">
            <h5 class="modal-title" id="periodModalLabel">Add/Edit Period</h5>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
          </div>
          <div class="modal-body">
            <form id="periodForm">
              <input type="hidden" id="periodIdInput" name="periodId">
              <input type="hidden" id="dayInput" name="day">
              <input type="hidden" id="hourInput" name="hour">
              <input type="hidden" id="sectionInput" name="section" value="<%= timetable.section._id %>">
              <input type="hidden" id="yearInput" name="year" value="<%= timetable.year._id %>">
              <input type="hidden" id="branchInput" name="branch" value="<%= timetable.branch._id %>">
              <input type="hidden" id="semesterInput" name="semester" value="<%= timetable.semester._id %>">

              <div class="mb-3">
                <label for="subject" class="form-label">Subject</label>
                <select id="subject" name="subject" class="form-control" required>
                  <option value="" disabled selected>Select Subject</option>
                  <!-- Options will be populated dynamically based on branch and semester -->
                </select>
              </div>
              <div class="mb-3">
                <label for="faculty" class="form-label">Faculty</label>
                <select id="faculty" name="faculty" class="form-control" required>
                  <option value="" disabled selected>Select Faculty</option>
                  <!-- Options will be populated dynamically based on branch and semester -->
                </select>
              </div>
              <div class="mb-3">
                <label for="startTime" class="form-label">Start Time</label>
                <input type="time" id="startTime" name="startTime" class="form-control" required readonly>
              </div>
              <div class="mb-3">
                <label for="endTime" class="form-label">End Time</label>
                <input type="time" id="endTime" name="endTime" class="form-control" required readonly>
              </div>
              <button type="submit" class="btn btn-primary">Save</button>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script>
    // Function to display the period creation form
    function createPeriodForm(day, period) {
      document.getElementById('periodIdInput').value = ''; // Clear the period ID for a new period
      document.getElementById('dayInput').value = day + 1; // Display day starting from 1
      document.getElementById('hourInput').value = period + 1; // Display period starting from 1

      const startTime = document.getElementById(`startTime_${period + 1}`).value;
      const endTime = document.getElementById(`endTime_${period + 1}`).value;

      document.getElementById('startTime').value = startTime;
      document.getElementById('endTime').value = endTime;

      const section = document.getElementById('sectionInput').value;
      const year = document.getElementById('yearInput').value;
      const branch = document.getElementById('branchInput').value;
      const semester = document.getElementById('semesterInput').value;

      populateDropdowns(branch, semester);

      const periodModal = new bootstrap.Modal(document.getElementById('periodModal'));
      periodModal.show();
    }

    // Function to display the period edit form with pre-filled values
    function editPeriodForm(periodId, day, period, subject, faculty, startTime, endTime) {
      document.getElementById('periodIdInput').value = periodId;
      document.getElementById('dayInput').value = day + 1;
      document.getElementById('hourInput').value = period + 1;
      document.getElementById('startTime').value = startTime;
      document.getElementById('endTime').value = endTime;

      const branch = document.getElementById('branchInput').value;
      const semester = document.getElementById('semesterInput').value;

      populateDropdowns(branch, semester, subject, faculty);

      const periodModal = new bootstrap.Modal(document.getElementById('periodModal'));
      periodModal.show();
    }

    // Form submission handler
    document.getElementById('periodForm').addEventListener('submit', function(event) {
      event.preventDefault();

      const formData = new FormData(this);
      const periodId = formData.get('periodId');
      const method = periodId ? 'PUT' : 'POST';
      const url = periodId ? `/admin/timetable/period/${periodId}` : '/admin/timetable/period';
      console.log(`URL: ${url}`); // Log the URL
      console.log(`Method: ${method}`);
      fetch(url, {
        method: method,
        body: formData,
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Period saved successfully');
          const periodModal = bootstrap.Modal.getInstance(document.getElementById('periodModal'));
          periodModal.hide();
          location.reload(); // Reload the page to reflect changes
        } else {
          alert('Error saving period');
        }
      });
    });

    // Function to populate the subject and faculty dropdowns
    function populateDropdowns(branch, semester, selectedSubject = '', selectedFaculty = '') {
      fetch(`/admin/subject?branch=${branch}&semester=${semester}`)
        .then(response => response.json())
        .then(subjects => {
          const subjectSelect = document.getElementById('subject');
          subjectSelect.innerHTML = '<option value="" disabled selected>Select Subject</option>';
          subjects.forEach(subject => {
            const option = document.createElement('option');
            option.value = subject._id;
            option.textContent = subject.name;
            if (subject._id === selectedSubject) {
              option.selected = true;
            }
            subjectSelect.appendChild(option);
          });
        });

      fetch(`/admin/faculties?branch=${branch}`)
        .then(response => response.json())
        .then(faculties => {
          const facultySelect = document.getElementById('faculty');
          facultySelect.innerHTML = '<option value="" disabled selected>Select Faculty</option>';
          faculties.forEach(faculty => {
            const option = document.createElement('option');
            option.value = faculty._id;
            option.textContent = faculty.name;
            if (faculty._id === selectedFaculty) {
              option.selected = true;
            }
            facultySelect.appendChild(option);
          });
        });
    }

    // Function to delete a period
    function deletePeriod(periodId) {
      if (confirm('Are you sure you want to delete this period?')) {
        fetch(`/admin/timetable/period/${periodId}`, {
          method: 'DELETE'
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert('Period deleted successfully');
            location.reload(); // Reload the page to reflect changes
          } else {
            alert('Error deleting period');
          }
        });
      }
    }
  </script>
</body>
