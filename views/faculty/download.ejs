<%- layout("../layouts/facultyBoilerplate") -%>
<!DOCTYPE html>
<html>
<head>
    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #d0cede;
        }
        .form-container {
            background-color: #ffffff;
            padding: 30px;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }
        .report-type-container {
            border: 1px solid #dee2e6;
            padding: 15px;
            border-radius: 5px;
            margin-bottom: 20px;
        }
    </style>
</head>
<body>
    <div class="container mt-5">
        <div class="row justify-content-center">
            <div class="col-md-8 form-container shadow">
                <form method="post" action="/faculty/downloadReport" class="needs-validation" novalidate>
                    <h2 class="text-center mb-4">Download Attendance Report</h2>
                    <input type="hidden" name="section" value="<%= section._id %>">
                    <input type="hidden" name="acYear" value="<%= section.year %>">
                    <input type="hidden" name="branch" value="<%= section.branch._id %>">
                    <input type="hidden" name="semester" value="<%= section.currentSemester._id %>">
                    
                    <div class="report-type-container">
                        <div class="form-group">
                            <label>Report Type</label>
                            <div class="custom-control custom-radio">
                                <input type="radio" id="cumulative-subject" name="reportType" value="cumulative-subject" class="custom-control-input" required>
                                <label class="custom-control-label" for="cumulative-subject">Cumulative Subject-wise Report</label>
                            </div>
                            <div class="custom-control custom-radio">
                                <input type="radio" id="cumulative-monthly" name="reportType" value="cumulative-monthly" class="custom-control-input">
                                <label class="custom-control-label" for="cumulative-monthly">Cumulative Month-wise Report</label>
                            </div>
                        </div>
                    </div>

                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <label for="fromDate">From Date</label>
                            <input type="date" id="fromDate" name="fromDate" class="form-control" required>
                        </div>
                        <div class="form-group col-md-6">
                            <label for="toDate">To Date</label>
                            <input type="date" id="toDate" name="toDate" class="form-control" required>
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="percentageCriteria">Percentage Criteria</label>
                        <select id="percentageCriteria" name="percentageCriteria" class="form-control">
                            <option value="">All Students</option>
                            <option value="less_65">Less than 65%</option>
                            <option value="less_75">Less than 75%</option>
                            <option value="above_90">Above 90%</option>
                            <option value="other">Other</option>
                        </select>
                        <div id="otherCriteria" class="mt-2" style="display:none;">
                            <select id="otherCondition" name="otherCondition" class="form-control mb-2">
                                <option value=">">Greater than</option>
                                <option value="<">Less than</option>
                                <option value=">=">Greater than or equal to</option>
                                <option value="<=">Less than or equal to</option>
                                <option value="between">Between</option>
                            </select>
                            <input type="number" id="percentageValue" name="percentageValue" class="form-control mb-2" placeholder="Enter percentage">
                            <input type="number" id="percentageValue2" name="percentageValue2" class="form-control" placeholder="Enter second percentage (for Between)" style="display:none;">
                        </div>
                    </div>

                    <div class="form-group">
                        <label for="format">File Format</label>
                        <select id="format" name="format" class="form-control" required>
                            <option value="excel">Excel</option>
                            <option value="pdf">PDF</option>
                        </select>
                    </div>

                    <div class="form-group text-center mt-4">
                        <button type="button" id="showData" class="btn btn-primary">Preview Data</button>
                        <button type="submit" class="btn btn-outline-dark">Download Report</button>
                    </div>
                </form>

                <div id="dataDisplay" class="mt-5" style="display:none;">
                    <h3 class="text-center">Preview</h3>
                    <div class="table-responsive">
                        <div id="attendanceTableContainer"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            // Handle percentage criteria selection
            document.getElementById('percentageCriteria').addEventListener('change', function() {
                document.getElementById('otherCriteria').style.display = 
                    this.value === 'other' ? 'block' : 'none';
            });

            // Handle other condition selection
            document.getElementById('otherCondition').addEventListener('change', function() {
                document.getElementById('percentageValue2').style.display = 
                    this.value === 'between' ? 'block' : 'none';
            });

            // Preview data button handler
            document.getElementById('showData').addEventListener('click', function() {
                const formData = new FormData(document.querySelector('form'));
                const queryString = new URLSearchParams(formData).toString();

                $.ajax({
                    url: '/faculty/getAttendanceData?' + queryString,
                    type: 'GET',
                    success: function(data) {
                        document.getElementById('dataDisplay').style.display = 'block';
                        const tableContainer = document.getElementById('attendanceTableContainer');
                        if (data && data.length) {
                            const reportType = document.querySelector('input[name="reportType"]:checked').value;
                            tableContainer.innerHTML = createTable(data, reportType);
                        } else {
                            tableContainer.innerHTML = '<p class="text-center text-warning">No data found for the selected criteria.</p>';
                        }
                    },
                    error: function(xhr, status, error) {
                        console.error('Error:', error);
                        const tableContainer = document.getElementById('attendanceTableContainer');
                        tableContainer.innerHTML = '<p class="text-center text-danger">Error fetching data. Please try again.</p>';
                    }
                });
            });
            // Complete the EJS template first
function createTable(data, reportType) {
    if (!data.length) return '';

    let tableHTML = '<table class="table table-bordered table-striped"><thead><tr>';
    
    // Common columns
    tableHTML += '<th>Roll No</th><th>Name</th>';
    
    if (reportType === 'cumulative-subject') {
        // Get unique subjects
        const subjects = Object.keys(data[0].subjects || {});
        
        // Add subject columns (TC and TA for each)
        subjects.forEach(subject => {
            tableHTML += `<th colspan="2">${subject}</th>`;
        });
        
        // Add total columns
        tableHTML += '<th colspan="2">Total</th></tr><tr><th colspan="2"></th>';
        
        // Add TC/TA subheaders for each subject
        subjects.forEach(() => {
            tableHTML += '<th>TC</th><th>TA</th>';
        });
        
        // Add TC/TA subheaders for total
        tableHTML += '<th>TC</th><th>TA</th>';
        
    } else if (reportType === 'cumulative-monthly') {
        // Get unique months from the data
        const months = data[0].months.map(m => m.month);
        
        // Add month columns (TC and TA for each)
        months.forEach(month => {
            tableHTML += `<th colspan="2">${month}</th>`;
        });
        
        // Add total columns
        tableHTML += '<th colspan="2">Total</th></tr><tr><th colspan="2"></th>';
        
        // Add TC/TA subheaders for each month
        months.forEach(() => {
            tableHTML += '<th>TC</th><th>TA</th>';
        });
        
        // Add TC/TA subheaders for total
        tableHTML += '<th>TC</th><th>TA</th>';
    }
    
    tableHTML += '</tr></thead><tbody>';
    
    // Add data rows
    data.forEach(record => {
        tableHTML += `<tr><td>${record.rollNo}</td><td>${record.studentName}</td>`;
        
        if (reportType === 'cumulative-subject') {
            Object.values(record.subjects).forEach(subject => {
                tableHTML += `<td>${subject.TC}</td><td>${subject.TA}</td>`;
            });
            tableHTML += `<td>${record.totalTC}</td><td>${record.totalTA}</td>`;
            
        } else if (reportType === 'cumulative-monthly') {
            record.months.forEach(month => {
                tableHTML += `<td>${month.TC}</td><td>${month.TA}</td>`;
            });
            tableHTML += `<td>${record.totalTC}</td><td>${record.totalTA}</td>`;
        }
        
        tableHTML += '</tr>';
    });
    
    tableHTML += '</tbody></table>';
    return tableHTML;
}

// Add validation for the form
document.querySelector('form').addEventListener('submit', function(e) {
    const fromDate = new Date(document.getElementById('fromDate').value);
    const toDate = new Date(document.getElementById('toDate').value);
    
    if (fromDate > toDate) {
        e.preventDefault();
        alert('From Date cannot be greater than To Date');
        return false;
    }
    
    const percentageCriteria = document.getElementById('percentageCriteria').value;
    if (percentageCriteria === 'other') {
        const value1 = parseFloat(document.getElementById('percentageValue').value);
        const value2 = parseFloat(document.getElementById('percentageValue2').value);
        const condition = document.getElementById('otherCondition').value;
        
        if (condition === 'between' && (isNaN(value1) || isNaN(value2) || value1 > value2)) {
            e.preventDefault();
            alert('Please enter valid percentage values for the between condition');
            return false;
        }
        
        if (!condition === 'between' && isNaN(value1)) {
            e.preventDefault();
            alert('Please enter a valid percentage value');
            return false;
        }
    }
});

// Add date range restrictions based on semester dates
document.addEventListener('DOMContentLoaded', function() {
    const semesterStartDate = new Date('<%= section.currentSemester.startDate %>');
    const semesterEndDate = new Date('<%= section.currentSemester.endDate %>');
    
    const fromDateInput = document.getElementById('fromDate');
    const toDateInput = document.getElementById('toDate');
    
    fromDateInput.min = semesterStartDate.toISOString().split('T')[0];
    fromDateInput.max = semesterEndDate.toISOString().split('T')[0];
    toDateInput.min = semesterStartDate.toISOString().split('T')[0];
    toDateInput.max = semesterEndDate.toISOString().split('T')[0];
});
        });
</script>
</body>